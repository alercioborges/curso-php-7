A **promo√ß√£o de propriedades** em PHP √© um recurso introduzido no PHP 8.0 que permite declarar e inicializar propriedades de uma classe diretamente no construtor, de forma mais compacta e leg√≠vel.

---

### ‚úÖ O que √© Promo√ß√£o de Propriedades?

√â uma forma **sint√°tica** de declarar propriedades e seus valores no **construtor da classe**, economizando linhas de c√≥digo e tornando o c√≥digo mais claro.

---

### üéØ Para que serve?

* Reduz **boilerplate** (c√≥digo repetitivo).
* Melhora a legibilidade.
* Torna o c√≥digo mais conciso e direto.

---

### üîß Como funciona?

Ao usar **modificadores de visibilidade** (`public`, `protected`, `private`) diretamente nos par√¢metros do construtor, o PHP automaticamente:

* Declara a propriedade na classe.
* Inicializa a propriedade com o valor passado.
* Atribui o valor ao objeto no momento da cria√ß√£o.

---

### üß± Exemplo sem promo√ß√£o de propriedades (PHP < 8):

```php
class Produto {
    private string $nome;
    private float $preco;

    public function __construct(string $nome, float $preco) {
        $this->nome = $nome;
        $this->preco = $preco;
    }
}
```

---

### üß± Exemplo com promo√ß√£o de propriedades (PHP 8+):

```php
class Produto {
    public function __construct(
        private string $nome,
        private float $preco
    ) {}
}
```

üöÄ Isso faz exatamente o mesmo que o exemplo anterior, mas com menos c√≥digo!

---

### üì• Acessando as propriedades:

```php
$produto = new Produto("Celular", 1500.00);

// Acesso direto s√≥ se a propriedade for p√∫blica
// echo $produto->nome; ‚ùå (se for private)

// Para acessar, voc√™ pode criar m√©todos:
class Produto {
    public function __construct(
        private string $nome,
        private float $preco
    ) {}

    public function getNome(): string {
        return $this->nome;
    }
}
```

---

### üîç Regras importantes:

* S√≥ funciona no **construtor** (`__construct`).
* Precisa declarar o **modificador de visibilidade** (`public`, `protected`, `private`).
* Pode incluir **valores padr√£o**, **tipagem**, e **nullables** (`?`).

---

### ‚ö†Ô∏è Quando n√£o usar?

Evite promo√ß√£o se:

* Precisa l√≥gica de valida√ß√£o no `__construct`.
* Vai usar a propriedade fora do construtor, mas com regras complexas de acesso.

---

### ‚úÖ Quando usar?

* Objetos de dados simples (DTOs, entidades b√°sicas).
* Classes onde as propriedades s√£o somente lidas no futuro.